<?php

namespace Proxies\__CG__\Acme\DevisBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Tablier extends \Acme\DevisBundle\Entity\Tablier implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setQuantite($quantite)
    {
        $this->__load();
        return parent::setQuantite($quantite);
    }

    public function getQuantite()
    {
        $this->__load();
        return parent::getQuantite();
    }

    public function setLargeur($largeur)
    {
        $this->__load();
        return parent::setLargeur($largeur);
    }

    public function getLargeur()
    {
        $this->__load();
        return parent::getLargeur();
    }

    public function setFinieLargeur($finieLargeur)
    {
        $this->__load();
        return parent::setFinieLargeur($finieLargeur);
    }

    public function getFinieLargeur()
    {
        $this->__load();
        return parent::getFinieLargeur();
    }

    public function setHauteur($hauteur)
    {
        $this->__load();
        return parent::setHauteur($hauteur);
    }

    public function getHauteur()
    {
        $this->__load();
        return parent::getHauteur();
    }

    public function setFinieHauteur($finieHauteur)
    {
        $this->__load();
        return parent::setFinieHauteur($finieHauteur);
    }

    public function getFinieHauteur()
    {
        $this->__load();
        return parent::getFinieHauteur();
    }

    public function setLames($lames)
    {
        $this->__load();
        return parent::setLames($lames);
    }

    public function getLames()
    {
        $this->__load();
        return parent::getLames();
    }

    public function setSerrureSurLame($serrureSurLame)
    {
        $this->__load();
        return parent::setSerrureSurLame($serrureSurLame);
    }

    public function getSerrureSurLame()
    {
        $this->__load();
        return parent::getSerrureSurLame();
    }

    public function setLaquageLames($laquageLames)
    {
        $this->__load();
        return parent::setLaquageLames($laquageLames);
    }

    public function getLaquageLames()
    {
        $this->__load();
        return parent::getLaquageLames();
    }

    public function setNumeroRal($numeroRal)
    {
        $this->__load();
        return parent::setNumeroRal($numeroRal);
    }

    public function getNumeroRal()
    {
        $this->__load();
        return parent::getNumeroRal();
    }

    public function setClient(\Acme\DevisBundle\Entity\Client $client = NULL)
    {
        $this->__load();
        return parent::setClient($client);
    }

    public function getClient()
    {
        $this->__load();
        return parent::getClient();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'quantite', 'largeur', 'finie_largeur', 'hauteur', 'finie_hauteur', 'lames', 'serrure_sur_lame', 'laquage_lames', 'numero_ral', 'client');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}